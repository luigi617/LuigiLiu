version: "3.3"

services:
  django:
    build:
      context: .
      dockerfile: ./compose/production/Dockerfile
    command: /start.sh
    volumes:
      - .:/code
      - static_volume:/code/front-end/staticfiles
      - media_volume:/code/front-end/media
    expose:
      - 8000
    env_file:
      - ./.envs/.prod/.django
      - ./.envs/.prod/.postgres
    depends_on:
      - postgres

  postgres:
    image: postgres
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - postgres_data_backups:/backups
    ports: 
      - "5432:5432"
    env_file:
      - ./.envs/.prod/.postgres
  # nginx:
  #   build: ./nginx
  #   volumes:
  #     - static_volume:/code/front-end/static
  #     - media_volume:/code/front-end/media
  #   ports:
  #     - 80:80
  #   depends_on:
  #     - django
  
  nginx:
    build: ./nginx
    volumes:
      - static_volume:/code/front-end/static
      - media_volume:/code/front-end/media
      - ./data/certbot/conf:/code/etc/letsencrypt
      - ./data/certbot/www:/code/var/www/certbot
    ports:
      - 80:80
      - 443:443
    depends_on:
      - django
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
  certbot:
    image: certbot/certbot
    volumes:
      - ./data/certbot/conf:/code/etc/letsencrypt
      - ./data/certbot/www:/code/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes: 
  postgres_data: {}
  postgres_data_backups: {}
  static_volume: {}
  media_volume: {}